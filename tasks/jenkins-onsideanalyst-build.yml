---
- hosts: stratabet-onsideanalyst
  user: ansible
  sudo: yes
  sudo_user: root
  vars:
    branch_env: "{{ BRANCH|default(master) }}"  
  vars_files:
    - ../vars/secret
    - ../vars/main.yml
    - ../defaults/main.yml

  tasks:
     
  - name: Setup up /opt/go Path
    file: path=/opt/go/src/bitbucket.org/***REMOVED*** state=directory owner=admin group=admin mode=0775
    file: path=/opt/go/bin state=directory owner=admin group=admin mode=0775
    file: path=/opt/go/pkg state=directory owner=admin group=admin mode=0775
    
#  - name: ensure github is a known host
#    action: sshknownhosts host=bitbucket.org state=present 

    #onsideanalyst PATHS - Clone specific repo branch
  - name: Setup the onsideanalyst Git repo
    git: repo=git@bitbucket.org:***REMOVED***/onsideanalyst.git
          dest=/opt/onsideanalyst
          force=yes
          clone=yes
          version={{branch_env}}
          accept_hostkey=yes
          key_file=/home/admin/.ansible_playbooks/keys/id_rsa    
          
  - name: Setup up bower_components Path
    file: path=/opt/onsideanalyst/bower_components state=directory owner=admin group=admin mode=0775
         
    # Install Go lang dependencies and fix path
  - name: Download the Go tarball
    get_url: url={{ go_download_location }}
           dest=/usr/local/src/{{ go_tarball }}
           sha256sum={{ go_tarball_checksum }}

  - name: Register the current Go version (if any)
    command: /usr/local/go/bin/go version
    ignore_errors: yes
    register: go_version
    changed_when: false

  - name: Extract the Go tarball if Go is not yet installed or if it is not the desired version
    command: tar -C /usr/local -xf /usr/local/src/{{ go_tarball }}
    when: go_version|failed or go_version.stdout != go_version_target

    #Configuring Path variables
  - name: Add the Go bin directory to the PATH environment variable for all users
    copy: src=../files/go-bin.sh
          dest=/etc/profile.d
  - name: Set GOPATH for all users
    copy: src=../files/go-path.sh
          dest=/etc/profile.d
  - name: Set API env variable for all users
    copy: src=../files/go-api.sh
          dest=/etc/profile.d
    
    #Executable PATHS
  - action: shell date '+%F.%H:%M:%S' 
    register: mydate 
  - action: file dest=/opt/go/bin/{{ mydate.stdout }}  state=directory 
                                   
    ##
    # Apt package installation of required software.
    ##
  - name: General | Install required packages.
    apt: pkg={{item}} state=installed
    with_items:
     - npm
     - curl
    
    ## 
    # Onside Analyst Web dependencies
    ##
  - name: Executing npm install under onsideanalyst
    shell: cd /opt/onsideanalyst && export NVM_DIR="/root/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && nvm use 5.11 && npm install
    become: yes
    become_user: root
  - name: Executing bower install under onsideanalyst
    shell: cd /opt/onsideanalyst && bower install --allow-root 
    become: yes
    become_user: root
  - name: Executing grunt deploy under onsideanalyst
    shell: cd /opt/onsideanalyst && export NVM_DIR="/root/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && nvm use 5.11 && npm install
    become: yes
    become_user: root

  # Manage Supervisor onsideanalyst task - restart
  - name: Restart Data API supervisor Job
    supervisorctl: name="onsideanalyst" state=restarted
     